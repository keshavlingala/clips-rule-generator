
(defrule filter-rule-generated (applicant (id ?id) 
(country "Spain") 
(edlevel "Master") 
(gender "Man") 
(mainbranch "Dev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 5)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(gender "Woman") 
(mainbranch "Dev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 7)) 
(test (>= ?ycp 5)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "Australia") 
(edlevel "NoHigherEd") 
(gender "Man") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 25)) 
(test (>= ?ycp 6)) 
(test (member$ "SQL" $?skills)) 
(test (member$ "R" $?skills)) 
(test (member$ "Rust" $?skills)) 
(test (member$ "Assembly" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "South Africa") 
(edlevel "PhD") 
(gender "Woman") 
(mainbranch "Dev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 42)) 
(test (>= ?ycp 30)) 
(test (member$ "Clojure" $?skills)) 
(test (member$ "Java" $?skills)) 
(test (member$ "Objective-C" $?skills)) 
(test (member$ "C" $?skills)) 
(test (member$ "Go" $?skills)) 
(test (member$ "SQL" $?skills)) 
(test (member$ "TypeScript" $?skills)) 
(test (member$ "Java" $?skills)) 
(test (member$ "R" $?skills)) 
(test (member$ "C#" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "Germany") 
(edlevel "PhD") 
(gender "Woman") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 7)) 
(test (>= ?ycp 4)) 
(test (member$ "Assembly" $?skills)) 
(test (member$ "SQL" $?skills)) 
(test (member$ "Objective-C" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Other") 
(gender "Man") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 18)) 
(test (>= ?ycp 12)) 
(test (member$ "PHP" $?skills)) 
(test (member$ "SQL" $?skills)) 
(test (member$ "Go" $?skills)) 
(test (member$ "Bash/Shell/PowerShell" $?skills)) 
(test (member$ "JavaScript" $?skills)) 
(test (member$ "Erlang" $?skills)) 
(test (member$ "Kotlin" $?skills)) 
(test (member$ "F#" $?skills)) 
(test (member$ "TypeScript" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(gender "Woman") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 15)) 
(test (>= ?ycp 6)) 
(test (member$ "Nuxt.js" $?skills)) 
(test (member$ "Unity" $?skills)) 
(test (member$ "3D" $?skills)) 
(test (member$ "CouchDB" $?skills)) 
(test (member$ "HTML/CSS" $?skills)) 
(test (member$ "FastAPI" $?skills)) 
(test (member$ "AWS" $?skills)) 
(test (member$ "Scala" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "United States") 
(edlevel "NoHigherEd") 
(gender "NonBinary") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 8)) 
(test (>= ?ycp 3)) 
(test (member$ "Managed" $?skills)) 
(test (member$ "Hosting" $?skills)) 
(test (member$ "Puppet" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(gender "Man") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 5)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 9)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 9)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "NotDev") 
(accessibility "No") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 9)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Undergraduate") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 15)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 10)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 10)) 
=> (assert (result ?id)))

(defrule filter-rule-generated (applicant (id ?id) 
(country "India") 
(edlevel "Master") 
(mainbranch "Dev") 
(accessibility "Yes") 
(yearscode ?yc) (yearscodepro ?ycp) (skills $?skills))
(test (>= ?yc 10)) 
(test (>= ?ycp 10)) 
(test (member$ "Java" $?skills)) 
=> (assert (result ?id)))
